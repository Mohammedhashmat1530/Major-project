<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Chat</title>
  <script>
    const ROOM_ID = "<%= roomId %>";
    document.title += " | " + ROOM_ID;
  </script>
  <!-- libraries -->
  <link rel="shortcut icon" type="image/x-icon" href="/assets/images/favicon.svg" />
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
    integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous" />

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
    crossorigin="anonymous"></script>
  
  
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js" type="text/javascript"></script> 
    <script src="http://www.skulpt.org/js/skulpt.min.js" type="text/javascript"></script> 
    <script src="http://www.skulpt.org/js/skulpt-stdlib.js" type="text/javascript"></script> 
    <script src="/js/skulpt.min.js" type="text/javascript"></script>
    <script src="/js/skulpt-stdlib.js" type="text/javascript"></script>

  <!-- scripts -->
  <script src="/js/firebaselogin.js"></script>
  <script src="/js/logout.js"></script>
 

  <!-- css -->
  <link rel="stylesheet" href="/styles/chatroom.css" />
  <style>

    #yourcode{
      font-size: larger;
      font-weight: 900;
      color: #132119;
    }

    #output{
      font-size: larger;
      font-weight:bolder;
      color: #132119;
    }
    
    #title{
      font-size: large;
      font-weight: 600;
      color: #284433;
    }
    #compiler-interface {
      background: url('https://images.unsplash.com/photo-1508615039623-a25605d2b022?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NTl8fHBsYWluJTIwYmFja2dyb3VuZHxlbnwwfHwwfHx8MA%3D%3D') no-repeat;
      background-size: cover;
      backdrop-filter: blur(6px);
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    
      flex-grow: 1;
      overflow-y: auto;
      
    }

    .header {
      background-color: #3498db;
      color: #fff;
      padding: 10px;
      text-align: center;
      font-size: 1.5rem;
    }

    .content {
      padding: 20px;
    }

    label {
      display: block;
      margin-bottom: 8px;
      font-weight: bold;
    }

    input {
      width: 100%;
      padding: 8px;
      margin-bottom: 16px;
      box-sizing: border-box;
    }

    #new {
      background-color: #2ecc71;
      color: #fff;
      padding: 10px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      width: 30%;
      font-size: 1rem;
      display: block;
      margin-top: 12px;
      margin-left: 30vw;

     
    }

    #new:hover {
      background-color: #193d28;
      color: #fff;
      padding: 10px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      width: 30%;
      font-size: 1rem;
      display: block;
      margin-top: 12px;
      margin-left: 30vw;
    }
    
   

    textarea {
      width: 100%;
      height: 45vh;
      font-family: 'Courier New', monospace;
      font-size: 14px;
      border: 1px solid #ddd;
      border-radius: 4px;
      padding: 10px;
      margin-bottom: 10px;
    }
    
  </style>
</head>

<body>
  <div class="dark-light">
    <svg viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5" fill="none" stroke-linecap="round"
      stroke-linejoin="round">
      <path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z" />
    </svg>
  </div>
  <div class="back-button" onclick="window.location.href='/home'">
    <img src="https://img.icons8.com/ios-glyphs/90/ffffff/circled-left.png" style="width: 40px; height: 40px" />
  </div>
  <div class="app">
    <div class="main__header">
      <h4>
        Compiler
        <button style="
              background-color: #3a6df0;
              border: none;
              padding: 8px 26px;
              color: #fff;
              border-radius: 10px;
              margin-top: 16px;
              cursor: pointer;
              transition: 0.3s;
              white-space: nowrap;
              font-size: 16px;
            " type="button" id="StartMeeting" onclick="window.location.href = '/' + ROOM_ID">
          Join Meeting
        </button>
      </h4>
    </div>

    <div id="compiler-interface">

      <div class="content">
        <div>
        <label id="title" for="code">Enter your code:</label>
        <textarea placeholder=" # print('WebRecruit final year project')" id="yourcode" id="code" rows="6"></textarea>
      </div>
      <pre id="output" ></pre> 
        <label for="language">Select language:</label>
        <select id="language">
          <option value="python">Python</option>
          <option value="java">Java</option>
          <!-- Add more options as needed -->
        </select>

        <button id="new" onclick="runit()">Compile</button>
        
      </div>
    </div>

  </div>
</body>

<script type="text/javascript"> 
  // output functions are configurable.  This one just appends some text
  // to a pre element.
  function outf(text) { 
      var mypre = document.getElementById("output"); 
      mypre.innerHTML = mypre.innerHTML + text; 
      
  } 
  function builtinRead(x) {
      if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
              throw "File not found: '" + x + "'";
      return Sk.builtinFiles["files"][x];
  }
  
  // Here's everything you need to run a python program in skulpt
  // grab the code from your textarea
  // get a reference to your pre element for output
  // configure the output function
  // call Sk.importMainWithBody()
  function runit() { 
     var prog = document.getElementById("yourcode").value; 
     var mypre = document.getElementById("output");
    
    
     mypre.innerHTML = ''; 
     Sk.pre = "output";
     Sk.configure({output:outf, read:builtinRead}); 
     (Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';
     var myPromise = Sk.misceval.asyncToPromise(function() {
         return Sk.importMainWithBody("<stdin>", false, prog, true);
     });
     myPromise.then(function(mod) {
         console.log('success');
     },
         function(err) {
         console.log(err.toString());
         mypre.innerHTML=err.toString();
     });
     
  }
  </script>

</html>